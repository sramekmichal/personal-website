<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Michal Šrámek</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on Michal Šrámek</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 26 Jun 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>The Magic of SAP: A Comprehensive Guide for Begginers</title>
      <link>http://localhost:1313/blogs/magic-of-sap-comprehensive-guide-for-begginers/</link>
      <pubDate>Wed, 26 Jun 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blogs/magic-of-sap-comprehensive-guide-for-begginers/</guid>
      <description>&lt;p&gt;In the process of our IT life, each of us will surely encounter the word SAP one day. But what is actually SAP and how does it actually work? The official vendor documentation is clear on this and defines SAP as following: &lt;code&gt;SAP is one of the world’s leading producers of software for the management of business processes.&lt;/code&gt; That is not entirely clear. Even a literal German translation - &lt;strong&gt;Systemanalyse Programmentwicklung&lt;/strong&gt; - will not help us too much.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Activity Monitoring and Audit in AWS</title>
      <link>http://localhost:1313/blogs/activity-monitoring-and-audit-in-aws/</link>
      <pubDate>Sat, 16 Mar 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blogs/activity-monitoring-and-audit-in-aws/</guid>
      <description>&lt;p&gt;Following text involves AWS native tools for the continuous monitoring of activities within an AWS environment to detect and respond to security threats and breaches.&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;It encompasses the discovery collection of best practices&lt;/em&gt;, how to achieve this goal. Implementing this &lt;u&gt;secure&lt;/u&gt; &lt;strong&gt;Activity Monitoring and Audit in AWS&lt;/strong&gt;, will enhance security posture, mitigate risks, and better protect all AWS resources and sensitive data from unauthorised access or malicious activities.&lt;/p&gt;&#xA;&lt;p&gt;Every decision made in AWS environment should be in accordance with the &lt;a href=&#34;https://docs.aws.amazon.com/prescriptive-guidance/latest/security-reference-architecture/architecture.html&#34;&gt;AWS Security Reference Architecture&lt;/a&gt;. This involves understanding the principles outlined in the architecture, conducting a risk assessment to identify potential security risks, and designing AWS architecture to incorporate security controls at every layer.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Fortress GitHub: Building a Secure Organization</title>
      <link>http://localhost:1313/blogs/fortress-github-building-secure-organization/</link>
      <pubDate>Wed, 14 Feb 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blogs/fortress-github-building-secure-organization/</guid>
      <description>&lt;p&gt;Authentication security on the GitHub platform is a key aspect of protecting corporate data and securing user accounts. Usually, we rely not only on standard methodologies (passwords, 2FA) but also on the significant benefits of centralized access control and easy integration with an external identity service. In this way, we could contribute to an overall increase in the level of security. SAML (Security Assertion Markup Language) is a standard for exchanging authentication and authorization data between security domains, often used for Single Sign-On (SSO) across web applications. In the context of GitHub, it&amp;rsquo;s important as it allows centralized access control and easy integration with external identity services, enhancing overall security.&lt;/p&gt;</description>
    </item>
    <item>
      <title>GitHub: Personal Access Tokens</title>
      <link>http://localhost:1313/blogs/github-personal-access-tokens/</link>
      <pubDate>Thu, 19 Oct 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blogs/github-personal-access-tokens/</guid>
      <description>&lt;p&gt;There are currently 2 types of personal access tokens (PATs) available on GitHub. &lt;strong&gt;Fine-grained PATs&lt;/strong&gt; (beta) and &lt;strong&gt;Classic PATs&lt;/strong&gt;. Both are used for authentication and authorization, but have different properties and uses. There is no Token like Token.&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt; &lt;/th&gt;&#xA;          &lt;th&gt;Fine-grained PATs (beta)&lt;/th&gt;&#xA;          &lt;th&gt;Classic PATs&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Purpose&lt;/td&gt;&#xA;          &lt;td&gt;Token for GitHub API for scripting or testing.&lt;/td&gt;&#xA;          &lt;td&gt;OAuth personal access tokens &lt;strong&gt;OR&lt;/strong&gt; Instead of a Git password via HTTPS &lt;strong&gt;OR&lt;/strong&gt; For API authentication via Basic Authentication.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Expiration&lt;/td&gt;&#xA;          &lt;td&gt;Required (up to 1 year)&lt;/td&gt;&#xA;          &lt;td&gt;Can be used without expiration.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Owner&lt;/td&gt;&#xA;          &lt;td&gt;User and also Organization&lt;/td&gt;&#xA;          &lt;td&gt;User&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Access&lt;/td&gt;&#xA;          &lt;td&gt;Either repository permissions (public, all, selected) and may (may not) access resources under the personal account; &lt;strong&gt;OR&lt;/strong&gt; repository permissions (public, all, selected) and may (may not) access resources under the organization.&lt;/td&gt;&#xA;          &lt;td&gt;Determined by &lt;a href=&#34;https://docs.github.com/en/apps/oauth-apps/building-oauth-apps/scopes-for-oauth-apps&#34;&gt;Scopes&lt;/a&gt;. These can be for anything the user is entitled to (even within the Organization).&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Overview&lt;/td&gt;&#xA;          &lt;td&gt;They are visible in the Organization in the &amp;ldquo;Active tokens&amp;rdquo; overview with a visible expiration date. Once clicked, the accesses (what permissions the token has in which repository) are clearly visible.&lt;/td&gt;&#xA;          &lt;td&gt;There is no overview in the Organization. It is possible to retrieve token activity via the API, but we cannot distinguish user activity from machine activity. Their activity is only recorded in GitHub Audit Logs.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Can PAT be disabled?&lt;/td&gt;&#xA;          &lt;td&gt;Yes&lt;/td&gt;&#xA;          &lt;td&gt;Yes&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Is approval required?&lt;/td&gt;&#xA;          &lt;td&gt;Yes and No&lt;/td&gt;&#xA;          &lt;td&gt;No&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;active-use-of-fine-grained-pats&#34;&gt;Active use of Fine-grained PATs&lt;/h2&gt;&#xA;&lt;p&gt;If the GitHub Organization Member (not the Owner) chooses to use Fine-grained PATs and mandatory approval of Fine-grained PATs is enabled, the Member will receive a &amp;ldquo;not found&amp;rdquo; message and the request will be in pending status. It will also appear in the &amp;ldquo;Pending Requests&amp;rdquo; report in the Organization:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
